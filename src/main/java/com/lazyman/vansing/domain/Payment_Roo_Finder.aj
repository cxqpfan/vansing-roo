// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.lazyman.vansing.domain;

import com.lazyman.vansing.domain.Course;
import com.lazyman.vansing.domain.Payment;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect Payment_Roo_Finder {
    
    public static Long Payment.countFindPaymentsByCourse(Course course) {
        if (course == null) throw new IllegalArgumentException("The course argument is required");
        EntityManager em = Payment.entityManager();
        TypedQuery q = em.createQuery("SELECT COUNT(o) FROM Payment AS o WHERE o.course = :course", Long.class);
        q.setParameter("course", course);
        return ((Long) q.getSingleResult());
    }
    
    public static TypedQuery<Payment> Payment.findPaymentsByCourse(Course course) {
        if (course == null) throw new IllegalArgumentException("The course argument is required");
        EntityManager em = Payment.entityManager();
        TypedQuery<Payment> q = em.createQuery("SELECT o FROM Payment AS o WHERE o.course = :course", Payment.class);
        q.setParameter("course", course);
        return q;
    }
    
    public static TypedQuery<Payment> Payment.findPaymentsByCourse(Course course, String sortFieldName, String sortOrder) {
        if (course == null) throw new IllegalArgumentException("The course argument is required");
        EntityManager em = Payment.entityManager();
        String jpaQuery = "SELECT o FROM Payment AS o WHERE o.course = :course";
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            jpaQuery = jpaQuery + " ORDER BY " + sortFieldName;
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                jpaQuery = jpaQuery + " " + sortOrder;
            }
        }
        TypedQuery<Payment> q = em.createQuery(jpaQuery, Payment.class);
        q.setParameter("course", course);
        return q;
    }
    
}
